#############################################################################
# Generated by PAGE version 4.14
# in conjunction with Tcl version 8.6
set vTcl(timestamp) ""


if {!$vTcl(borrow)} {

set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #d9d9d9
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #d8d8d8
set vTcl(active_menu_fg) #000000
}

#################################
#LIBRARY PROCEDURES
#


if {[info exists vTcl(sourcing)]} {

proc vTcl:project:info {} {
    set base .top37
    global vTcl
    set base $vTcl(btop)
    if {$base == ""} {
        set base .top37
    }
    namespace eval ::widgets::$base {
        set dflt,origin 0
        set runvisible 1
    }
    namespace eval ::widgets_bindings {
        set tagslist _TopLevel
    }
    namespace eval ::vTcl::modules::main {
        set procs {
        }
        set compounds {
        }
        set projectType single
    }
}
}

#################################
# GENERATED GUI PROCEDURES
#

proc vTclWindow.top37 {base} {
    if {$base == ""} {
        set base .top37
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background {#d9d9d9} -highlightbackground {#d9d9d9} \
        -highlightcolor black 
    wm withdraw $top
    wm focusmodel $top passive
    wm geometry $top 300x150+717+267
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1924 1061
    wm minsize $top 120 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm title $top "City Report"
    vTcl:DefineAlias "$top" "top_level" vTcl:Toplevel:WidgetProc "" 1
    ttk::entry $top.tEn38 \
        -foreground {} -background {} -takefocus {} -cursor ibeam 
    vTcl:DefineAlias "$top.tEn38" "country_code_entry" vTcl:WidgetProc "top_level" 1
    ttk::style configure TButton -background #d9d9d9
    ttk::style configure TButton -foreground #000000
    ttk::style configure TButton -font TkDefaultFont
    ttk::button $top.tBu39 \
        -takefocus {} -text Generate 
    vTcl:DefineAlias "$top.tBu39" "generate_button" vTcl:WidgetProc "top_level" 1
    ttk::label $top.tLa40 \
        -background {#d9d9d9} -foreground {#000000} -font TkDefaultFont \
        -relief flat -justify left -wraplength 200 \
        -text {Enter or select directory to store the file.} 
    vTcl:DefineAlias "$top.tLa40" "intro_label" vTcl:WidgetProc "top_level" 1
    label $top.lab38 \
        -background {#d9d9d9} -disabledforeground {#a3a3a3} \
        -foreground {#000000} -text {Output Directory} 
    vTcl:DefineAlias "$top.lab38" "out_directory_label" vTcl:WidgetProc "top_level" 1
    button $top.but39 \
        -background {#d9d9d9} -foreground {#000000} -pady 0 -text Open... 
    vTcl:DefineAlias "$top.but39" "open_button" vTcl:WidgetProc "top_level" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.tEn38 \
        -in $top -x 170 -y 90 -anchor center -bordermode ignore 
    place $top.tBu39 \
        -in $top -x 150 -y 120 -anchor center -bordermode ignore 
    place $top.tLa40 \
        -in $top -x 160 -y 40 -width 200 -relwidth 0 -height 50 -relheight 0 \
        -anchor center -bordermode ignore 
    place $top.lab38 \
        -in $top -x 50 -y 90 -anchor center -bordermode ignore 
    place $top.but39 \
        -in $top -x 260 -y 90 -anchor center -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

#############################################################################
## Binding tag:  _TopLevel

bind "_TopLevel" <<Create>> {
    if {![info exists _topcount]} {set _topcount 0}; incr _topcount
}
bind "_TopLevel" <<DeleteWindow>> {
    if {[set ::%W::_modal]} {
                vTcl:Toplevel:WidgetProc %W endmodal
            } else {
                destroy %W; if {$_topcount == 0} {exit}
            }
}
bind "_TopLevel" <Destroy> {
    if {[winfo toplevel %W] == "%W"} {incr _topcount -1}
}

set btop ""
if {$vTcl(borrow)} {
    set btop .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop $vTcl(tops)] != -1} {
        set btop .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop
Window show .
Window show .top37 $btop
if {$vTcl(borrow)} {
    $btop configure -background plum
}

